*&---------------------------------------------------------------------*
*& Report ZSDR_CIF003
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZSDR_CIF003.

TYPE-POOLS:slis.
INCLUDE: <icon>.

CONSTANTS:
  yes                                    VALUE 'X',
  no                                     VALUE space,
  c_vrsio(3)                             VALUE '000'.
"----------------- NAMA TABEL YANG DI GUNAKAN ----------
TABLES: vbrk.

*Common Mandatory and Non Mandatory ALV Variables
DATA:
  i_layout     TYPE slis_layout_alv,
  i_events     TYPE slis_t_event,
  i_fieldcat   TYPE slis_t_fieldcat_alv,
  i_print      TYPE slis_print_alv,
  i_list_top   TYPE slis_t_listheader,
  i_list_end   TYPE slis_t_listheader,
  i_sort       TYPE slis_t_sortinfo_alv,
  i_color      TYPE lvc_t_scol WITH HEADER LINE,
  wa_fieldcat  LIKE LINE OF i_fieldcat,
  i_variant    LIKE disvariant,
  i_selfield   TYPE slis_selfield,
  fcode        TYPE TABLE OF sy-ucomm,
  ok_code      TYPE sy-ucomm,
  data_count   TYPE i,
  header_count TYPE i,
  v_total TYPE sy-pagno.


DATA:
  gt_ekko LIKE ekko OCCURS 0,
  gs_extract1 LIKE disextract,
  gs_extract2 LIKE disextract.

"------- FIELD DATABASE YANG AKAN DI PANGGIL
TYPES:
  BEGIN OF zs_print,
    sel,
    fkdat TYPE vbrk-fkdat,
    vbeln TYPE vbrk-vbeln,
    kunag TYPE vbrk-kunag,
    name TYPE kna1-name1,
    arktx TYPE vbrp-arktx,
    fkimg TYPE vbrp-fkimg,
    vrkme TYPE vbrp-vrkme,
    netwr TYPE vbrp-netwr,
    waerk TYPE vbrp-waerk,
    line TYPE string,
    cust_nm TYPE kna1-name1,

    colinfo     TYPE lvc_t_scol,
  END OF zs_print,
  zt_print TYPE TABLE OF zs_print,

  BEGIN OF zsvbr,
    sel,
    fkdat TYPE vbrk-fkdat,
    vbeln TYPE vbrk-vbeln,
    kunag TYPE vbrk-kunag,
    name TYPE kna1-name1,
    arktx TYPE vbrp-arktx,
    fkimg TYPE vbrp-fkimg,
    vrkme TYPE vbrp-vrkme,
    netwr TYPE vbrp-netwr,
    waerk TYPE vbrp-waerk,
    vkorg TYPE vbrk-vkorg,
    fkart TYPE vbrk-fkart,
    vgbel TYPE vbrp-vgbel,
    vgpos TYPE vbrp-vgpos,

    colinfo   TYPE lvc_t_scol,
  END OF zsvbr,
  ztvbr TYPE TABLE OF zsvbr.

DATA:
  it_print TYPE zt_print,
  wa_print TYPE zs_print,
  it_print2 TYPE zt_print,
  wa_print2 TYPE zs_print,
  it_zvbr TYPE ztvbr,
  wa_zvbr TYPE zsvbr.

*INITIALIZATION.
CALL FUNCTION 'REUSE_ALV_EXTRACT_AT_INIT'
  CHANGING
    cs_extract1 = gs_extract1
    cs_extract2 = gs_extract2.

"------- INPUTAN BOX YANG TAMPIL DI SCREEN
SELECTION-SCREEN BEGIN OF BLOCK HEAD1 WITH FRAME TITLE text-001.

PARAMETERS: p_vkorg TYPE vbrk-vkorg OBLIGATORY DEFAULT 'E201'.

SELECT-OPTIONS:
  p_fkdat FOR vbrk-fkdat OBLIGATORY,
  p_kunag FOR vbrk-kunag.

PARAMETERS: p_dest TYPE string.
SELECTION-SCREEN END OF BLOCK HEAD1.

START-OF-SELECTION.

  PERFORM f_getdt.
  PERFORM f_lstdt.
  PERFORM destination_selection.


  DESCRIBE TABLE it_print LINES data_count.
  IF data_count > 0.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        text = 'Preparing report.......'.

    PERFORM f_layout_init USING i_layout.
    PERFORM f_eventtab_build USING i_events[].
    i_variant-report = sy-repid.
    PERFORM f_print_control.
    PERFORM f_build_header_list.
    PERFORM f_build_sort.
    PERFORM f_build_fieldcat.
    PERFORM f_build_data TABLES it_print.
    PERFORM print_alv.
  ELSE.
    MESSAGE i000(z02).
  ENDIF.


*Form  f_layout_init
*Global settings for ALV worksheet, Change according to needs
FORM f_layout_init  USING   p_layout TYPE slis_layout_alv.
  p_layout-detail_popup       = yes.
  p_layout-numc_sum           = yes.
  p_layout-colwidth_optimize  = no.
  p_layout-zebra              = yes.
  p_layout-get_selinfos        = yes.
  p_layout-coltab_fieldname   = 'COLINFO'.
  p_layout-subtotals_text     = 'SubTotal'.
  p_layout-totals_text        = 'Total'.
  p_layout-box_fieldname      = 'SEL'. "------- UNTUK MENGAKTIFKAN CEKBOX(SELECTION) 'SEL'

ENDFORM.                    " f_layout_init

*Form  f_eventtab_build
*Event listing for ALV worksheet, Change according to needs
FORM f_eventtab_build  USING p_events TYPE slis_t_event.
  DATA:
    ls_event TYPE slis_alv_event.

  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
    EXPORTING
      i_list_type = 0
    IMPORTING
      et_events   = p_events.

  READ TABLE p_events WITH KEY name = slis_ev_top_of_page INTO ls_event.
  IF sy-subrc = 0.
    MOVE slis_ev_top_of_page TO: ls_event-form, ls_event-name.
    APPEND ls_event TO p_events.
  ENDIF.

  READ TABLE p_events WITH KEY name = slis_ev_end_of_page INTO ls_event.
  IF sy-subrc = 0.
    MOVE slis_ev_end_of_page TO: ls_event-form, ls_event-name.
    APPEND ls_event TO p_events.
  ENDIF.

*  READ TABLE p_events WITH KEY name = slis_ev_end_of_list INTO ls_event.
*  IF sy-subrc = 0.
*    MOVE slis_ev_end_of_list TO: ls_event-form, ls_event-name.
*    APPEND ls_event TO p_events.
*  ENDIF.

  READ TABLE p_events WITH KEY name = slis_ev_top_of_list INTO ls_event.
  IF sy-subrc = 0.
    MOVE slis_ev_top_of_list TO: ls_event-form, ls_event-name.
    APPEND ls_event TO p_events.
  ENDIF.

  "----------------- UNCOMMAND UNTUK NONAKTIVKAN TOMBOL DI ATAS-----------
*  READ TABLE p_events WITH KEY name = slis_ev_pf_status_set INTO ls_event.
*  IF sy-subrc = 0.
*    MOVE slis_ev_pf_status_set TO: ls_event-form, ls_event-name.
*    APPEND ls_event TO p_events.
*  ENDIF.
  "---------------- END SCRIPT ---------------------------------------------

  READ TABLE p_events WITH KEY name = slis_ev_user_command INTO ls_event.
  IF sy-subrc = 0.
    MOVE slis_ev_user_command TO: ls_event-form, ls_event-name.
    APPEND ls_event TO p_events.
  ENDIF.

ENDFORM.                    " f_eventtab_build

*Form  f_print_control
*Global settings for print control???????????, Change according to needs
FORM f_print_control.
  i_print-no_print_selinfos      = yes.
  i_print-no_print_listinfos     = yes.
  i_print-reserve_lines          = 0.
  i_print-no_change_print_params = yes.

ENDFORM.                    " f_print_control

*Form  f_build_header_list
*As the name implies i guess (^_^;)
FORM f_build_header_list.
  DATA: lwa_list_top LIKE LINE OF i_list_top,
        lv_text LIKE sy-title,
        gs_line TYPE slis_listheader,
        vtime   TYPE char12,
        vtitle  TYPE char50.

  REFRESH i_list_top.
  CLEAR lwa_list_top.
  lwa_list_top-typ = 'H'.
  lwa_list_top-key = no.
  lwa_list_top-info = sy-title.
  APPEND lwa_list_top TO i_list_top.

*  REFRESH i_list_top.
*  CLEAR lwa_list_top.
*  lwa_list_top-typ = 'S'.
*  lwa_list_top-key = 'user:'.
*  lwa_list_top-info = sy-uname.
*  APPEND lwa_list_top TO i_list_top.

ENDFORM.                    " f_build_header_list

*Form  f_build_sort
*Sort by blah blah blah
FORM f_build_sort .
  DATA: l_sort TYPE slis_sortinfo_alv.


  define def_sort.
    clear l_sort.
*Sort position
    l_sort-spos      = &1.
    l_sort-fieldname = &2.

*Sort by ascending
    l_sort-up        = yes.

*Subtot key
    l_sort-subtot    = yes.

*Separate Line between Group
    l_sort-group     = 'UL'.
    append l_sort to i_sort.
  end-of-definition.

*  def_Sort '01' 'RACCT'.

ENDFORM.                    " f_build_sort



***************************Form fbuild_fieldcat.
***************************What fields to expose
FORM f_build_fieldcat.
*****************************************************

  REFRESH i_fieldcat.

*  CLEAR wa_fieldcat.
*  wa_fieldcat-fieldname     = 'VBELN'.
*  wa_fieldcat-tabname       = wa_fieldcat-ctabname = wa_fieldcat-qtabname = 'IT_PRINT'.
*  wa_fieldcat-ref_tabname   = 'VBAK'.
*  wa_fieldcat-ref_fieldname = 'VBELN'.
*  wa_fieldcat-just          = 'L'.
*  wa_fieldcat-seltext_L     = 'Bussiness Area 1'. 'ditambahkan jika title didefine sendiri
*  wa_fieldcat-ddictxt       = 'L'.      'ditambahkan jika title didefine sendiri
*  wa_fieldcat-qfieldname    = 'VRKME'. 'untuk field bertipe quantity
*  wa_fieldcat-cfieldname    = 'WAERK'. 'untuk field bertipe price
*  APPEND wa_fieldcat TO i_fieldcat.

  "--------------- PANGGIL FIELD YANG AKAN DI MUNCULKAN-----------------

*    wa_print-fkdat = wa_zvbr-fkdat.
*    wa_print-vbeln = wa_zvbr-vbeln.
*    wa_print-kunag = wa_zvbr-kunag.
*    wa_print-arktx = wa_zvbr-arktx.
*    wa_print-fkimg = wa_zvbr-fkimg.
*    wa_print-netwr = wa_zvbr-netwr.
*  "Material Number
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'FKDAT'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Billing Date'.
  wa_fieldcat-ref_tabname   = 'VBRK'.
  wa_fieldcat-ref_fieldname = 'FKDAT'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'VBELN'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Billing Document'.
  wa_fieldcat-ref_tabname   = 'VBRK'.
  wa_fieldcat-ref_fieldname = 'VBELN'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'KUNAG'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Sold-To'.
  wa_fieldcat-ref_tabname   = 'VBRK'.
  wa_fieldcat-ref_fieldname = 'KUNAG'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'CUST_NM'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Sold-To Party'.
  wa_fieldcat-ref_tabname   = 'KNA1'.
  wa_fieldcat-ref_fieldname = 'NAME1'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'ARKTX'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Description'.
  wa_fieldcat-ref_tabname   = 'VBRP'.
  wa_fieldcat-ref_fieldname = 'ARKTX'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'FKIMG'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Billed Quantity'.
  wa_fieldcat-ref_tabname   = 'VBRP'.
  wa_fieldcat-ref_fieldname = 'FKIMG'.
  wa_fieldcat-qfieldname    = 'VRKME'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'VRKME'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'UoM'.
  wa_fieldcat-ref_tabname   = 'VBRP'.
  wa_fieldcat-ref_fieldname = 'VRKME'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'NETWR'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Net Value'.
  wa_fieldcat-ref_tabname   = 'VBRP'.
  wa_fieldcat-ref_fieldname = 'NETWR'.
  wa_fieldcat-cfieldname    = 'WAERK'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'WAERK'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Currency'.
  wa_fieldcat-ref_tabname   = 'VBRP'.
  wa_fieldcat-ref_fieldname = 'WAERK'.
  wa_fieldcat-ddictxt       = 'L'.
  APPEND wa_fieldcat TO i_fieldcat.
*
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname     = 'LINE'.
  wa_fieldcat-seltext_l     = wa_fieldcat-seltext_m = wa_fieldcat-seltext_l = 'Destination'.
  wa_fieldcat-ddictxt       = 'L'.
  wa_fieldcat-outputlen     = '75'.
  APPEND wa_fieldcat TO i_fieldcat.

ENDFORM.                    "f_build_field_cat

***************************Form fbuild_data.
***************************What The Heck Is This
FORM f_build_data  TABLES  lt_data STRUCTURE wa_print.
*DATA:
*  wa_check TYPE zs_print,
*  lp_prev_index TYPE i,
*  wlt_data TYPE zs_print,
*  c_indicator TYPE i VALUE 1.
*
*
* LOOP AT lt_data INTO wlt_data.
*   IF sy-tabix > 1.
*     lp_prev_index = sy-tabix - 1.
*     READ TABLE lt_data INDEX lp_prev_index INTO wa_check.
*     IF wlt_data-svbeln2 <> wa_check-svbeln2.
*       c_indicator = c_indicator * -1.
*     ENDIF.
*   ENDIF.
*
*  IF c_indicator = 1.
*     REFRESH i_color.
*     CLEAR   i_color.
*     i_color-color-col = cl_gui_resources=>list_col_negative.
*     i_color-color-int = 0.
*  ELSE.
*     REFRESH i_color.
*     CLEAR   i_color.
*     i_color-color-col = cl_gui_resources=>list_col_positive.
*     i_color-color-int = 0.
*  ENDIF.
*
*  APPEND i_color.
*  wlt_data-colinfo[] = i_color[].
*  MODIFY lt_data FROM wlt_data.
*  CLEAR wlt_data.
* ENDLOOP.
ENDFORM.                    " f_build_data


*&--------------------------------------------------------------------*
*&Form  print_alv
*&--------------------------------------------------------------------*
FORM print_alv.
  DATA:
    i_save VALUE 'U'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program = gs_extract1-report
      is_layout          = i_layout
      it_fieldcat        = i_fieldcat
      i_save             = i_save
      is_variant         = i_variant
      it_events          = i_events[]
      it_sort            = i_sort
      is_print           = i_print
    TABLES
      t_outtab           = it_print
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    "

*&---------------------------------------------------------------------*
*&Form  TOP_OF_PAGE
*&---------------------------------------------------------------------*
FORM top_of_page.                                           "#EC CALLED
  DATA: lflg_grid TYPE c,
        lv_text LIKE sy-title.
  IMPORT lflg_grid FROM MEMORY ID 'ALV_GRID_TOP_OF_PAGE'.
  IF lflg_grid = yes.
    CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
      EXPORTING
        i_logo             = 'ENJOYSAP_LOGO'
        it_list_commentary = i_list_top.
*              I_END_OF_LIST_GRID = i_list_end.
  ELSE.
    PERFORM f_print_header USING text-100 lv_text space.
  ENDIF.
ENDFORM.                    "TOP_OF_PAGE

*&---------------------------------------------------------------------*
*&Form  PF_STATUS_SET
*&---------------------------------------------------------------------*
FORM pf_status_set USING rt_extab TYPE slis_t_extab.

  SET PF-STATUS 'STATALV' EXCLUDING fcode.
  SET TITLEBAR  'TITLEALV'.
ENDFORM.                    "PF_STATUS_SET

*&---------------------------------------------------------------------*
*&Form  USER_COMMAND
*&---------------------------------------------------------------------*
FORM user_command USING r_ucomm
                        i_selfield LIKE i_selfield.
  DATA: t_answer TYPE char1.

  CLEAR ok_code.
  ok_code = r_ucomm.
  CLEAR sy-ucomm.
  CASE ok_code.
    WHEN 'EXIT'.
      LEAVE TO CURRENT TRANSACTION.
  ENDCASE.
ENDFORM.                    "user_command

*&---------------------------------------------------------------------*
*&Form  END_OF_PAGE
*&---------------------------------------------------------------------*
FORM end_of_page.                                           "#EC CALLED
  data: l_pos(3) type n value 0, l_foot(30) value '*** END OF PAGE ***'.
  l_pos = ( sy-linsz / 2 ) - ( strlen( l_foot ) / 2 ).
  uline.
  write: /, at l_pos l_foot.

ENDFORM.                    "END_OF_PAGE

*&---------------------------------------------------------------------*
*&Form  END_OF_LIST
*&---------------------------------------------------------------------*
FORM end_of_list.                                           "#EC CALLED
  data: lv_page_count(3).
  data: l_pos(3) type n value 0, l_foot(30) value '*** END OF REPORT ***'.
  l_pos = ( sy-linsz / 2 ) - ( strlen( l_foot ) / 2 ).
  uline.
  write: /, at l_pos l_foot.
  check sy-ucomm eq '&RNT'.
  v_total = sy-pagno.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      i_logo             = 'ENJOYSAP_LOGO'
      I_END_OF_LIST_GRID = i_list_end.
ENDFORM.                    "END_OF_LIST
*&---------------------------------------------------------------------*
*&Form  f_print_header
*&---------------------------------------------------------------------*
FORM f_print_header  USING    p_title1 LIKE sy-title
                              p_title2 LIKE sy-title
                              p_title3 LIKE sy-title.

  data: l_post1 type i, l_post2 type i, l_post3 type i, l_post4 type i, l_posin type i.

  l_post1 = ( sy-linsz / 2 ) - ( strlen( p_title1 ) / 2 ).
  l_post2 = ( sy-linsz / 2 ) - ( strlen( p_title2 ) / 2 ).
  l_post3 = ( sy-linsz / 2 ) - ( strlen( p_title3 ) / 2 ).
  l_post4 = l_post1 - 15.
  l_posin = sy-linsz - 22.

  write:  / 'Report  :', sy-cprog.
  write at  l_post1 'Argo Manunggal Group'.
  write at  l_posin 'Date :'.
  write     sy-datum.

  write:  / 'Cli/Sys :', sy-mandt, '/', sy-sysid.
  write at  l_post4 sy-title.
  write at: l_posin 'Time :'.
  write     sy-uzeit.

  write:  / 'UserID  :', sy-uname.
  write at  l_posin 'Page :'.

  if v_total is not initial.
    write: (3) sy-pagno no-zero, 'of', (3) v_total.
  else.
    write (3) sy-pagno no-zero.
  endif.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_GETDT
*---------- GET DATA DARI DATABASE ------------
*&---------------------------------------------------------------------*
FORM F_GETDT .

  CLEAR it_zvbr.
  SELECT fkdat
         vbrk~vbeln
         kunag
         vbrp~arktx
         vbrp~fkimg
         vbrp~netwr
         vkorg
         fkart
         vbrp~vrkme
         vbrp~waerk
         vbrp~vgbel
         vbrp~vgpos
    FROM vbrk INNER JOIN vbrp ON vbrk~vbeln = vbrp~vbeln
    INTO CORRESPONDING FIELDS OF TABLE it_zvbr
    WHERE vkorg = p_vkorg AND
          fkart = 'ZINV' AND
          fkdat IN p_fkdat AND
          kunag IN p_kunag AND
          fksto <> 'X'.

ENDFORM.                    " F_GETDT
*&---------------------------------------------------------------------*
*&      Form  F_LSTDT
*&---------------------------------------------------------------------*
FORM F_LSTDT.

  DATA: name type thead-tdname,
        t_line type standard table of tline,
        w_line like line of t_line.

  CLEAR: wa_zvbr, wa_print, name, t_line, w_line.
  LOOP AT it_zvbr INTO wa_zvbr.
    wa_print-fkdat = wa_zvbr-fkdat.
    wa_print-vbeln = wa_zvbr-vbeln.
    wa_print-kunag = wa_zvbr-kunag.
    wa_print-arktx = wa_zvbr-arktx.
    wa_print-fkimg = wa_zvbr-fkimg.
    wa_print-netwr = wa_zvbr-netwr.
    wa_print-vrkme = wa_zvbr-vrkme.
    wa_print-waerk = wa_zvbr-waerk.

    SELECT SINGLE name1 FROM kna1
      INTO wa_print-cust_nm
      WHERE kunnr = wa_zvbr-kunag.

    SELECT SINGLE likp~vbeln FROM likp
      INNER JOIN lips ON lips~vbeln = likp~vbeln
      INTO name
      WHERE lips~vbeln = wa_zvbr-vgbel AND
            lips~posnr = wa_zvbr-vgpos.

    CLEAR: t_line, w_line.
    CALL FUNCTION 'READ_TEXT'
      EXPORTING
*       CLIENT                        = SY-MANDT
        ID                            = 'Z001'
        LANGUAGE                      = sy-langu
        NAME                          = name
        OBJECT                        = 'VBBK'
*       ARCHIVE_HANDLE                = 0
*       LOCAL_CAT                     = ' '
*     IMPORTING
*       HEADER                        =
*       OLD_LINE_COUNTER              =
      TABLES
        LINES                         = t_line
      EXCEPTIONS
       ID                            = 1
       LANGUAGE                      = 2
       NAME                          = 3
       NOT_FOUND                     = 4
       OBJECT                        = 5
       REFERENCE_CHECK               = 6
       WRONG_ACCESS_TO_ARCHIVE       = 7
       OTHERS                        = 8
              .

    LOOP AT t_line INTO w_line.
      IF wa_print-line IS INITIAL.
        wa_print-line = w_line.
      ELSE.
        CONCATENATE wa_print-line w_line INTO wa_print-line.
      ENDIF.
      REPLACE ALL OCCURRENCES OF '*' IN: wa_print-line WITH ''.
    ENDLOOP.

    APPEND wa_print TO it_print.
    CLEAR: wa_print, wa_zvbr.
  ENDLOOP.
ENDFORM.                    " F_LSTDT

FORM destination_selection.

  CLEAR it_print2.

  LOOP AT it_print INTO wa_print.
    IF wa_print-line CS p_dest.
      wa_print2-fkdat = wa_print-fkdat.
      wa_print2-vbeln = wa_print-vbeln.
      wa_print2-kunag = wa_print-kunag.
      wa_print2-arktx = wa_print-arktx.
      wa_print2-fkimg = wa_print-fkimg.
      wa_print2-netwr = wa_print-netwr.
      wa_print2-vrkme = wa_print-vrkme.
      wa_print2-waerk = wa_print-waerk.
      wa_print2-cust_nm = wa_print-cust_nm.
      wa_print2-line = wa_print-line.

      APPEND wa_print2 to it_print2.
      CLEAR wa_print2.
    ENDIF.
  ENDLOOP.

  CLEAR it_print.
  it_print = it_print2.
ENDFORM.